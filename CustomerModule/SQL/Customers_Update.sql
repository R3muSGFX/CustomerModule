CREATE PROCEDURE [dbo].[Customers_Update]
	@ERROR_NUMBER INT OUT,
	@ERROR_MESSAGE NVARCHAR(4000) OUT,
	@Customer_ID INT,
	@Customer_Name NVARCHAR(30),
	@Customer_Surname NVARCHAR(30),
	@Customer_Phonenumber NVARCHAR(10),
	@Customer_Address NVARCHAR(50)
AS

	SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
	SET NOCOUNT ON;

	-- Variables
	DECLARE @TRANCOUNT INT = @@TRANCOUNT
	DECLARE @TRANNAME VARCHAR(38) = NEWID()
	DECLARE @ID_NULL VARCHAR(50) = 'The Customer ID cannot be NULL.'

	-- Initializations
	SET @ERROR_NUMBER = 0
	SET @ERROR_MESSAGE = N''

	-- Begin transaction block
	BEGIN TRY
		IF @TRANCOUNT = 0
			BEGIN TRANSACTION;
		ELSE
			SAVE TRANSACTION @TRANNAME;
		
		-- Validations
		IF @Customer_ID IS NULL
			RAISERROR (@ID_NULL, 11, 1);
	
		UPDATE
			[dbo].[Customers]
		SET
			CUSTOMER_NAME = @Customer_Name,
			CUSTOMER_SURNAME = @Customer_Surname,
			CUSTOMER_PHONENUMBER = @Customer_Phonenumber,
			CUSTOMER_ADDRESS = @Customer_Address
		WHERE
			CUSTOMER_ID = @Customer_ID

		-- End transaction block
		IF @TRANCOUNT = 0
			COMMIT TRANSACTION;

	END TRY
	BEGIN CATCH
		SET @ERROR_NUMBER = ERROR_NUMBER();
		SET @ERROR_MESSAGE = FORMATMESSAGE('%s:%d - %s', ERROR_PROCEDURE(), ERROR_LINE(), ERROR_MESSAGE());
		IF @TRANCOUNT = 0
			ROLLBACK TRANSACTION;
		ELSE IF XACT_STATE() != -1
			ROLLBACK TRANSACTION @TRANNAME;
		ELSE
			RAISERROR (@ERROR_MESSAGE, 11, 1);
	END CATCH;